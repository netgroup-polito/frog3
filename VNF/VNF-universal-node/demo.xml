<?xml version="1.0" encoding="UTF-8"?>

<network-functions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
                 xsi:noNamespaceSchemaLocation="network-functions.xsd">
                 
	<!--
		This is an example of configuration file for the name-resolver. For each
		network function name, it contains a list of possible implementations for
		that network function. 
		
		An implementation can be:
		* a docker container
		* a dpdk (secondary) process
		* a kvm virtual machine
		
		In case of docker container, the file specifies the URI from which the
		image of this container can be downloaded. Note that it must refer to
		a docker registry.
		
		In case of dpdk (secondary) process, the file specifies the URI from which
		the executable can be retrieved and the number of cores required by the
		network function. Since the URI can be a web URL or a path on the local file
		system, the file also specifies to interpretate the URI through the attribute
		location.
		
		In case of KVM virtual machine, the file specifies the URI from which the
		image of the virtual machine can be retrieved. It is a path on the local
		file system.
	-->


	<network-function name="example">
		<implementation type="docker" uri="localhost:5000/example"/>
<!--		<implementation type="dpdk" uri="https://nf_repository.con/example" cores="1" location="remote"/>
		<implementation type="dpdk" uri="/home/nf_repository/dpdk/example" cores="1" location="local"/>
		<implementation type="kvm" uri="/home/nf_repository/kvm/example.qcow2"/>-->
	</network-function>

	<!-- DEMO -->

	<!-- NOBODY -->
	
	<network-function name="user_login">
<!--		<implementation type="docker" uri="localhost:5000/captive_portal"/>-->
		<implementation type="docker" uri="localhost:5000/tomcat"/>
	</network-function>
	
	<network-function name="dhcp">
		<implementation type="docker" uri="localhost:5000/dhcp_server"/>
	</network-function>
	
	<network-function name="dns">
		<implementation type="docker" uri="localhost:5000/dns"/>
	</network-function>
	
	<network-function name="ip_forger">
		<implementation type="docker" uri="localhost:5000/ip_forger"/>
	</network-function>
	
	<!-- ISP -->
	
	<network-function name="dhcp_isp">
		<implementation type="docker" uri="localhost:5000/dhcp_isp"/>
	</network-function>
	
	<network-function name="nat_isp">
		<implementation type="docker" uri="localhost:5000/nat_isp"/>
	</network-function>
	
	<network-function name="ntop_isp">
		<implementation type="docker" uri="localhost:5000/ntop_isp"/>
	</network-function>
	
	<!-- OVS -->
	
	<network-function name="switch0">
		<implementation type="docker" uri="localhost:5000/ovs_control"/>
	</network-function>
	
	<network-function name="switch1">
		<implementation type="docker" uri="localhost:5000/ovs_control"/>
	</network-function>
	
	<network-function name="switch2">
		<implementation type="docker" uri="localhost:5000/ovs_control"/>
	</network-function>
	
	<network-function name="switch3">
		<implementation type="docker" uri="localhost:5000/ovs_control"/>
	</network-function>
	
	<network-function name="switch4">
		<implementation type="docker" uri="localhost:5000/ovs_control"/>
	</network-function>
	
	<network-function name="switch5">
		<implementation type="docker" uri="localhost:5000/ovs_control"/>
	</network-function>
	
	<network-function name="sw_openflow">
		<implementation type="docker" uri="localhost:5000/ovs_nobody"/>
	</network-function>
	
	<!-- User Blue -->
	
	<network-function name="dhcp_blue">
		<implementation type="docker" uri="localhost:5000/dhcp_user_blue"/>
	</network-function>
	
	<network-function name="nat_blue">
		<implementation type="docker" uri="localhost:5000/nat_user_blue"/>
	</network-function>
	
	<network-function name="ntop80_blue">
		<implementation type="docker" uri="localhost:5000/ntop80_blue"/>
	</network-function>
	
	<network-function name="ntop_blue">
		<implementation type="docker" uri="localhost:5000/ntop_no80_blue"/>
	</network-function>
	
	<network-function name="dpi_blue">
		<implementation type="dpdk" uri="/home/kvmuser/Desktop/Test-30-04-15/VNF/dpdk/dpi_blue/build/dpi" cores="1" location="local"/>
	</network-function>
	
	<network-function name="logout_blue">
		<implementation type="docker" uri="localhost:5000/logout_user_blue"/>
	</network-function>
	
	<network-function name="ftp_blue">
		<implementation type="docker" uri="localhost:5000/ftp_user_blue"/>
	</network-function>
	
	<network-function name="fw_blue">
		<implementation type="docker" uri="localhost:5000/iptables_blue"/>
	</network-function>
	
	<!-- User Red -->
	
	<network-function name="dhcp_red">
		<implementation type="docker" uri="localhost:5000/dhcp_user_red"/>
	</network-function>
	
	<network-function name="nat_red">
		<implementation type="docker" uri="localhost:5000/nat_user_red"/>
	</network-function>
	
	<network-function name="ntop80_red">
		<implementation type="docker" uri="localhost:5000/ntop80_red"/>
	</network-function>
	
	<network-function name="ntop_red">
		<implementation type="docker" uri="localhost:5000/ntop_no80_red"/>
	</network-function>
	
	<network-function name="dpi_red">
		<implementation type="dpdk" uri="/home/kvmuser/Desktop/Test-30-04-15/VNF/dpdk/dpi_red/build/dpi" cores="1" location="local"/>
	</network-function>
	
	<network-function name="logout_red">
		<implementation type="docker" uri="localhost:5000/logout_user_red"/>
	</network-function>
	
	<network-function name="ftp_red">
		<implementation type="docker" uri="localhost:5000/ftp_user_red"/>
	</network-function>
	
	<network-function name="fw_red">
		<implementation type="docker" uri="localhost:5000/iptables_red"/>
	</network-function>
	
	<!-- both users when there is a single dhcp -->
	
	<network-function name="nat_users">
		<implementation type="docker" uri="localhost:5000/nat_users"/>
	</network-function>
	
	<network-function name="dhcp_unique">
		<implementation type="docker" uri="localhost:5000/dhcp_unique"/>
	</network-function>

</network-functions>
